{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteForm = props => {\n  _s();\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n\n  const [inputValue, setInputValue] = useState({\n    text: '',\n    author: ''\n  });\n  function submitFormHandler(event) {\n    event.preventDefault();\n    setInputValue({\n      text: event.target.value,\n      author: event.target.value\n    });\n\n    // const enteredAuthor = authorInputRef.current.value;\n    // const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: inputValue.author,\n      text: inputValue.text\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          value: inputValue.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text\",\n          rows: \"5\",\n          value: inputValue.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteForm, \"4aTwtt1BYKlgxRor20cr9x1GbtE=\");\n_c = QuoteForm;\nexport default QuoteForm;\nvar _c;\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useRef","useState","Card","LoadingSpinner","classes","QuoteForm","props","inputValue","setInputValue","text","author","submitFormHandler","event","preventDefault","target","value","onAddQuote","form","isLoading","loading","control","actions"],"sources":["C:/React Projects/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n\n  const [inputValue, setInputValue] = useState({\n    text: '',\n    author: ''\n  })\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    setInputValue({\n      text: event.target.value,\n      author: event.target.value\n    })\n\n    // const enteredAuthor = authorInputRef.current.value;\n    // const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: inputValue.author, text: inputValue.text });\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' value={inputValue.author} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' value={inputValue.text}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAExC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B;EACA;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC;IAC3CQ,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,SAASC,iBAAiB,CAACC,KAAK,EAAE;IAChCA,KAAK,CAACC,cAAc,EAAE;IAEtBL,aAAa,CAAC;MACZC,IAAI,EAAEG,KAAK,CAACE,MAAM,CAACC,KAAK;MACxBL,MAAM,EAAEE,KAAK,CAACE,MAAM,CAACC;IACvB,CAAC,CAAC;;IAEF;IACA;;IAEA;;IAEAT,KAAK,CAACU,UAAU,CAAC;MAAEN,MAAM,EAAEH,UAAU,CAACG,MAAM;MAAED,IAAI,EAAEF,UAAU,CAACE;IAAK,CAAC,CAAC;EACxE;EAEA,oBACE,QAAC,IAAI;IAAA,uBACH;MAAM,SAAS,EAAEL,OAAO,CAACa,IAAK;MAAC,QAAQ,EAAEN,iBAAkB;MAAA,WACxDL,KAAK,CAACY,SAAS,iBACd;QAAK,SAAS,EAAEd,OAAO,CAACe,OAAQ;QAAA,uBAC9B,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAErB,eAED;QAAK,SAAS,EAAEf,OAAO,CAACgB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACtC;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,QAAQ;UAAC,KAAK,EAAEb,UAAU,CAACG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACvD,eACN;QAAK,SAAS,EAAEN,OAAO,CAACgB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAClC;UAAU,EAAE,EAAC,MAAM;UAAC,IAAI,EAAC,GAAG;UAAC,KAAK,EAAEb,UAAU,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D,eACN;QAAK,SAAS,EAAEL,OAAO,CAACiB,OAAQ;QAAA,uBAC9B;UAAQ,SAAS,EAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmB;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC;AAAC,GAhDIhB,SAAS;AAAA,KAATA,SAAS;AAkDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}