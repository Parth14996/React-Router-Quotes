{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteForm = props => {\n  _s();\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n\n  const [author, setAuthor] = useState('');\n  const [text, setText] = useState('');\n  const authorHandler = ea => {\n    setAuthor(ea.target.value);\n  };\n  const textHandler = et => {\n    setText(et.target.value);\n  };\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    // const enteredAuthor = authorInputRef.current.value;\n    // const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: author,\n      text: text\n    });\n    setAuthor('');\n    setText('');\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          onChange: authorHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text\",\n          rows: \"5\",\n          onChange: textHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteForm, \"xvRVJkh5TwLw3CkYz6lIYO7cjBs=\");\n_c = QuoteForm;\nexport default QuoteForm;\nvar _c;\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useRef","useState","Card","LoadingSpinner","classes","QuoteForm","props","author","setAuthor","text","setText","authorHandler","ea","target","value","textHandler","et","submitFormHandler","event","preventDefault","onAddQuote","form","isLoading","loading","control","actions"],"sources":["C:/React Projects/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n\n  const[author, setAuthor] = useState('')\n  const[text, setText] = useState('')\n\n  const authorHandler = (ea) => {\n    setAuthor(ea.target.value)\n  }\n\n  const textHandler = (et) => {\n    setText(et.target.value)\n  }\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n\n\n    // const enteredAuthor = authorInputRef.current.value;\n    // const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: author, text: text });\n\n    setAuthor('')\n    setText('')\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' onChange={authorHandler} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' onChange={textHandler}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAExC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B;EACA;;EAEA,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAK,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMU,aAAa,GAAIC,EAAE,IAAK;IAC5BJ,SAAS,CAACI,EAAE,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,WAAW,GAAIC,EAAE,IAAK;IAC1BN,OAAO,CAACM,EAAE,CAACH,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,SAASG,iBAAiB,CAACC,KAAK,EAAE;IAChCA,KAAK,CAACC,cAAc,EAAE;;IAItB;IACA;;IAEA;;IAEAb,KAAK,CAACc,UAAU,CAAC;MAAEb,MAAM,EAAEA,MAAM;MAAEE,IAAI,EAAEA;IAAK,CAAC,CAAC;IAEhDD,SAAS,CAAC,EAAE,CAAC;IACbE,OAAO,CAAC,EAAE,CAAC;EACb;EAEA,oBACE,QAAC,IAAI;IAAA,uBACH;MAAM,SAAS,EAAEN,OAAO,CAACiB,IAAK;MAAC,QAAQ,EAAEJ,iBAAkB;MAAA,WACxDX,KAAK,CAACgB,SAAS,iBACd;QAAK,SAAS,EAAElB,OAAO,CAACmB,OAAQ;QAAA,uBAC9B,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAErB,eAED;QAAK,SAAS,EAAEnB,OAAO,CAACoB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACtC;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,QAAQ;UAAC,QAAQ,EAAEb;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD,eACN;QAAK,SAAS,EAAEP,OAAO,CAACoB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAClC;UAAU,EAAE,EAAC,MAAM;UAAC,IAAI,EAAC,GAAG;UAAC,QAAQ,EAAET;QAAY;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAK,SAAS,EAAEX,OAAO,CAACqB,OAAQ;QAAA,uBAC9B;UAAQ,SAAS,EAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmB;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC;AAAC,GAtDIpB,SAAS;AAAA,KAATA,SAAS;AAwDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}