{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const sortQuoteHandler = () => {\n    // history.push(\"/quotes?sort=\" + (isSortingAscending ? 'dsc' : 'asc'));\n    history.push(`${location.pathname}?sort=${isSortingAscending ? \"dsc\" : \"asc\"}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortQuoteHandler,\n        children: [\"Sort \", isSortingAscending ? \"Descending\" : \"Ascending\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","console","log","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","sortQuoteHandler","push","pathname","sorting","list","map","quote","author","text"],"sources":["C:/React Projects/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location)\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const sortQuoteHandler = () => {\n    // history.push(\"/quotes?sort=\" + (isSortingAscending ? 'dsc' : 'asc'));\n    history.push(`${location.pathname}?sort=${isSortingAscending ? \"dsc\" : \"asc\"}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortQuoteHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}{\" \"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAE1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,IAAIH,SAAS,EAAE;MACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAAGb,UAAU,EAAE;EAC5B,MAAMc,QAAQ,GAAGb,WAAW,EAAE;EAC9Bc,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAErB,MAAMG,WAAW,GAAG,IAAIC,eAAe,CAACJ,QAAQ,CAACK,MAAM,CAAC;EAExD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAE5D,MAAMC,YAAY,GAAGlB,UAAU,CAACQ,KAAK,CAACP,MAAM,EAAEe,kBAAkB,CAAC;EAEjE,MAAMG,gBAAgB,GAAG,MAAM;IAC7B;IACAV,OAAO,CAACW,IAAI,CAAE,GAAEV,QAAQ,CAACW,QAAS,SAAQL,kBAAkB,GAAG,KAAK,GAAG,KAAM,EAAC,CAAC;EACjF,CAAC;EACD,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAK,SAAS,EAAEjB,OAAO,CAACuB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEH,gBAAiB;QAAA,oBAC1BH,kBAAkB,GAAG,YAAY,GAAG,WAAW,EAAE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACnD;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAI,SAAS,EAAEjB,OAAO,CAACwB,IAAK;MAAA,UACzBL,YAAY,CAACM,GAAG,CAAEC,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACnB,EAAG;QACb,MAAM,EAAEmB,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACnB,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,GAlCIC,SAAS;EAAA,QACGX,UAAU,EACTC,WAAW;AAAA;AAAA,KAFxBU,SAAS;AAoCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}