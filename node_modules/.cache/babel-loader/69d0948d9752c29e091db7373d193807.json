{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\";\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\n// const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteList = props => {\n  // const history = useHistory();\n  // const location = useLocation();\n\n  // const queryParams = new URLSearchParams(location.search);\n\n  // const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  // const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  // const sortQuoteHandler = () => {\n  //   // history.push(\"/quotes?sort=\" + (isSortingAscending ? 'dsc' : 'asc'));\n  //   history.push(`${location.pathname}?sort=${isSortingAscending ? \"dsc\" : \"asc\"}`);\n  // };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","QuoteList","props","list","quotes","map","quote","id","author","text"],"sources":["C:/React Projects/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\n// const sortQuotes = (quotes, ascending) => {\n//   return quotes.sort((quoteA, quoteB) => {\n//     if (ascending) {\n//       return quoteA.id > quoteB.id ? 1 : -1;\n//     } else {\n//       return quoteA.id < quoteB.id ? 1 : -1;\n//     }\n//   });\n// };\n\nconst QuoteList = (props) => {\n  // const history = useHistory();\n  // const location = useLocation();\n\n  // const queryParams = new URLSearchParams(location.search);\n\n  // const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  // const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  // const sortQuoteHandler = () => {\n  //   // history.push(\"/quotes?sort=\" + (isSortingAscending ? 'dsc' : 'asc'));\n  //   history.push(`${location.pathname}?sort=${isSortingAscending ? \"dsc\" : \"asc\"}`);\n  // };\n  return (\n    <Fragment>\n      {/* <div className={classes.sorting}>\n        <button onClick={sortQuoteHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}{\" \"}\n        </button>\n      </div> */}\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAE1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B;EACA;;EAEA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA,oBACE,QAAC,QAAQ;IAAA,uBAMP;MAAI,SAAS,EAAEF,OAAO,CAACG,IAAK;MAAA,UACzBD,KAAK,CAACE,MAAM,CAACC,GAAG,CAAEC,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACC,EAAG;QACb,MAAM,EAAED,KAAK,CAACE,MAAO;QACrB,IAAI,EAAEF,KAAK,CAACG;MAAK,GAHZH,KAAK,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,KAjCIN,SAAS;AAmCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}