{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttp } from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport { CommentsList } from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  let comments;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Comments found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","classes","CommentsList","NewCommentForm","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","comments","length","startAddCommentHandler","addedCommentHandler"],"sources":["C:/React Projects/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttp } from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport { CommentsList } from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  let comments;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\" && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if(status==='completed' &&(!loadedComments || loadedComments.length === 0)) {\n    comments = <p>No Comments found</p>\n  }\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,MAAM,GAAGV,SAAS,EAAE;EAC1B,MAAM;IAAEW;EAAQ,CAAC,GAAGD,MAAM;EAC1B,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAGd,OAAO,CAACC,cAAc,CAAC;EAE7E,IAAIc,QAAQ;EAEZlB,SAAS,CAAC,MAAM;IACdc,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAE1B,IAAIE,MAAM,KAAK,SAAS,EAAE;IACxBG,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErB;EACH;EACA,IAAIH,MAAM,KAAK,WAAW,IAAKE,cAAc,IAAIA,cAAc,CAACE,MAAM,GAAG,CAAE,EAAE;IAC3ED,QAAQ,gBAAG,QAAC,YAAY;MAAC,QAAQ,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EACvD;EAEA,IAAGF,MAAM,KAAG,WAAW,KAAI,CAACE,cAAc,IAAIA,cAAc,CAACE,MAAM,KAAK,CAAC,CAAC,EAAE;IAC1ED,QAAQ,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;EACrC;EAEA,MAAME,sBAAsB,GAAG,MAAM;IACnCT,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMU,mBAAmB,GAAG,MAAM,CAAC,CAAC;EAEpC,oBACE;IAAS,SAAS,EAAEf,OAAO,CAACY,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACR,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEU,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAV,eAAe,iBACd,QAAC,cAAc;MACb,OAAO,EAAEG,OAAQ;MACjB,cAAc,EAAEQ;IAAoB;MAAA;MAAA;MAAA;IAAA,QAEvC,EACAH,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAC,GAlDIT,QAAQ;EAAA,QAEGP,SAAS,EAE8BC,OAAO;AAAA;AAAA,KAJzDM,QAAQ;AAoDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}